 # common costmap:
 # common parameters for the local and global
 # costmaps used by the move_base node

 # Coordinate frame and tf parameters
 # - - - - - - - - - - - - - - - - - -
 robot_base_frame: /base_footprint
 transform_tolerance: 1.0
 # global_frame: costmap dependent

 # Rate parameters
 # - - - - - - - - - - - - - - - - - -
 # costmap dependent

 # Map management parameters
 # - - - - - - - - - - - - - - - - - -
 # map_type: {voxel or costmap}
 map_type: costmap # (ahora "voxel" es el  default.. de hecho, "costmap" ya no esta documentado)
 # origin_x: 0.0   /* default */
 # origin_y: 0.0   /* default */


 # Static Map Layer
 # = = = = = = = = = = = = = = = = = = 
 # unknown_cost_value: 0       /* default */
 # lethal_cost_threshold: 100  /* default */
 # map_topic: map              /* default */



 # Obstacle Map Layer
 # = = = = = = = = = = = = = = = = = = 

 # Sensor management parameters
 # - - - - - - - - - - - - - - - - - - 
 # hay que tomar en cuenta, que si el rgbd est'a en otro pc, la carga de datos ser'a mucha!!

 # this is handled at launchfile level. see move_base.launch.xml
 observation_sources: "laser_sensors rgbd_laser_sensors"

 # required to work
 laser_sensors: {
  sensor_frame: /base_footprint,
  data_type: LaserScan,
  topic: /pepper_robot/laser,
  marking: true,
  clearing: true,
  expected_update_rate: 1.0, # [s]  avg: 40hz
  obstacle_range: 5,
  raytrace_range: 5.5,
  observation_persistence: 1.0
 }

 # rgbd_head to laserscan
 rgbd_laser_sensors: {
  sensor_frame: base_footprint,
  data_type: LaserScan,
  topic: /pepper_robot/camera/scan,
  marking: true,
  clearing: true,
  expected_update_rate: 0.0,
  obstacle_range: 2.9,
  raytrace_range: 3,
  max_obstacle_height: 1,
  min_obstacle_height: 0.0,
  #observation_persistence: 5
 }



 # Global Filtering params
 # - - - - - - - - - - - - - - - - - -
 # (apply to all sensors)

 # overrides higher per-sensor configs
 max_obstacle_height: 2.0
 # obstacle_range:  overriden on a per-sensor basis
 # raytrace_range:  overriden on a per-sensor basis


 # Obstacle Costmap Plugin (2D)
 # - - - - - - - - - - - - - - - - - -
 # (only used by the ObstacleCostmapPlugin)
 # Specifies whether or not to track what space in the costmap is unknown,
 # meaning that no observation about a cell has been seen from any sensor source.
 # WARNING: when setting this to true, the robot will fail to move at starting
 # because there will not be any information about its environment.
 # to solve this, you would need to move the base on your own before attempting to make a plan.
 track_unknown_space: false


 # Voxel Costmap Plugin    (3D)
 # - - - - - - - - - - - - - - - - - -
 # (only used by the VoxelCostmapPlugin)
 #origin_z: 0.0       #
 #z_resolution: 0.2   #
 #z_voxels: 10        #
 #unknown_threshold:  # (default: z_voxels)
 #mark_threshold: 0   #
 #publish_voxel_map: true # /* underlying volxel grid (visualization purposes) */

 # Inflation Layer
 # = = = = = = = = = = = = = = = = = = 
 # ... 
